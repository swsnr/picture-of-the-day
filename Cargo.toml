[package]
name = "pictureoftheday"
description = "A fresh picture of the day as your desktop wallpaper "
homepage = "https://codeberg.org/swsnr/picture-of-the-day"
repository = "https://codeberg.org/swsnr/picture-of-the-day"
license = "EUPL-1.2"
authors = ["Sebastian Wiesner <sebastian@swsnr.de>"]
# Our version number.  Since semver doesn't make much sense for UI applications
# which have no API we repurpose the version numer as follows:
#
# - major: Major new features or major changes to the UI, which may break the app for some users.
# - minor: User-visible features or bugfixes.
# - patch: Translation updates.
#
# Major and minor releases get release notes, but patch releases do not; this
# enables us to ship updates to translations whenever translators contributed
# new languages or made major updates, while still providing meaningful release
# notes for the last functional changes.
version = "1.7.2"
edition = "2024"
publish = false
default-run = "pictureoftheday"
rust-version = "1.89"

[features]
# Guards the internal binary for scraping sources
scraper = ["dep:indexmap", "indexmap/serde", "url/serde"]

[dependencies]
adw = { package = "libadwaita", version = "0.8.0", features = ["v1_7"] }
async-channel = "2.3.1"
jiff = { version = "0.2.10", default-features = false, features = [
    "std",
    "serde",
    "perf-inline",
    # We deliberately enable none of the timezone features as we only handle
    # civil dates and don't care about zones at all.
] }
glib = { version = "0.21.0", features = ["log_macros"] }
gnome-app-utils = { git = "https://codeberg.org/swsnr/gnome-app-utils.rs.git", rev = "c66af6cfc5ea9acac863c8898f103340ff0ed8c9" }
gtk = { package = "gtk4", version = "0.10.0", features = ["gnome_48"] }
quick-xml = "0.37.5"
scraper = { version = "0.23.1", default-features = false }
semver = "1.0.24"
serde = { version = "1.0.128", features = ["derive"] }
serde_json = "1.0.139"
soup = { package = "soup3", version = "0.8.0", features = ["v3_6"] }
strum = { version = "0.27.1", features = ["derive"] }
url = "2.5.4"
formatx = "0.2.4"

# Optional dependencies for the scraper binary
indexmap = { version = "2.7.1", optional = true }

[[bin]]
name = "scraper"
required-features = ["scraper"]

[package.metadata.release]
pre-release-commit-message = "Release {{version}}"
tag-message = "Picture Of The Day {{tag_name}}"
publish = false
# We push explicitly when the new release looks good
push = false
# The justfile runs all test before a release
verify = false
sign-tag = true
sign-commit = true
pre-release-hook = ["scripts/prerelease.py", "{{tag_name}}", "{{date}}"]
